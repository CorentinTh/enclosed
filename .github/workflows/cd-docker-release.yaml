name: Release new versions

on:
  push:
    tags:
      - 'v*.*.*'

  workflow_dispatch:
    inputs:

      release_version:
        description: 'Release version (no v prefix)'
        required: true
        default: '0.0.0'

      publish_lib:
        description: 'Publish lib to npm'
        required: true
        type: boolean
        default: true

      publish_cli:
        description: 'Publish CLI to npm'
        required: true
        type: boolean
        default: true

      release_docker:
        description: 'Release Docker images'
        required: true
        type: boolean
        default: true

permissions:
  contents: read
  packages: write

jobs:
  publish-crypto:
    name: Publish @enclosed/crypto to npm
    if: ${{ github.event.inputs.publish_lib || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: packages/crypto

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm i
        working-directory: ./

      - name: Publish @enclosed/crypto to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NPM_CONFIG_PROVENANCE: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  publish-lib:
    name: Publish @enclosed/lib to npm
    if: ${{ github.event.inputs.publish_lib || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: packages/lib

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm i
        working-directory: ./

      - name: Publish  @enclosed/lib to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NPM_CONFIG_PROVENANCE: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-cli:
    name: Publish @enclosed/cli to npm
    if: ${{ github.event.inputs.publish_cli || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: packages/cli

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm i
        working-directory: ./

      - name: Publish @enclosed/lib to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NPM_CONFIG_PROVENANCE: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker-release:
    name: Release Docker images
    if: ${{ github.event.inputs.release_docker || github.event_name == 'push'}}
    runs-on: ubuntu-latest
    steps:
      - name: Get release version from tag
        if: ${{ github.event_name == 'push' }}
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    
      - name: Get release version from input
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "RELEASE_VERSION=${{ github.event.inputs.release_version }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push root Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            corentinth/enclosed:latest
            corentinth/enclosed:${{ env.RELEASE_VERSION }}
            ghcr.io/corentinth/enclosed:latest
            ghcr.io/corentinth/enclosed:${{ env.RELEASE_VERSION}}

      - name: Build and push rootless Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.rootless
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            corentinth/enclosed:latest-rootless
            corentinth/enclosed:${{ env.RELEASE_VERSION }}-rootless
            ghcr.io/corentinth/enclosed:latest-rootless
            ghcr.io/corentinth/enclosed:${{ env.RELEASE_VERSION }}-rootless
