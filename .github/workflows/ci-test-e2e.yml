name: CI - App Client E2E

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  run-e2es:
    name: CI - App Client E2E
    runs-on: ubuntu-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: packages/app-client

    steps:
    - uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'pnpm'

    - name: Get Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(pnpm list --json | jq -r .[0].devDependencies.\"@playwright/test\".version)" >> "$GITHUB_OUTPUT"

    - name: Install dependencies
      run: pnpm i
      working-directory: ./
      
    - name: Build iso-prod app
      run: |
        pnpm -F @enclosed/app-client build
        pnpm -F @enclosed/app-server build:node
        mkdir dist-app
        cp -r dist dist-app/public
        cp -r ../app-server/dist-node/index.cjs dist-app/index.cjs

    - name: Restore Playwright browsers from cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}-${{ hashFiles('**/playwright.config.ts') }}
        restore-keys: |
          ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}-
          ${{ runner.os }}-playwright-

    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps

    - name: Run e2e tests
      run: pnpm test:e2e
      env:
        USE_PREVIEW_SERVER: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 15
